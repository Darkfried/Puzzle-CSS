
@function pz-class-name($num, $name:$pz-pieces-name){
    
    $class-name: #{$pz-container}#{$num}#{$pz-pieces-name};
    
    @return $class-name;
}

@mixin pz-create-pieces-class($pieces) {
    // Initialise an empty utility map that will eventually contain all our classes
    $pseudo-class-map: ();
    // Loop widths as fractions
    $num:1;
    @each $num in $pieces {
        
        @if($num !=0) {
            // Create class name and set width value
            
            $width-value: calc(100% / #{$num} - #{$pz-gutter});
            // Create width class
            .#{pz-class-name($num)}{
                width: $width-value;
            }
        }
    }
}

@if($pz-grid) {
    //container
    *[class*='#{$pz-container}'] {
        display: flex;
        flex-flow: row;
        flex-wrap: wrap;
        justify-content: space-around;
        margin-left: -($pz-gutter);
    }
    //child's
    *[class*='#{$pz-pieces-name}'] > *{
        flex: 0 0 auto;
        display: block; //for IE
        margin-left: $pz-gutter;
    }
    /*   
    @if($pz-one-page-options) {
        
        .cover {
            background-size: cover;
            min-height: 100vh;
            &:nth-of-type(2n) {
                background: $pz-background-color;
            }
        }
        .cover {
            &:nth-of-type(2n+1) {
                background-color: limegreen;
            }
        }
        .cover {
            &:first-of-type {
                background: $pz-cover-picture-url center fixed no-repeat;
            }
        }
        
    }*/
    @include pz-create-pieces-class($pz-pieces);
}